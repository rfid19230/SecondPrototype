CONN system/admin;

-- однострочные комментарии в Oracle начинаются с "--". многострочные заключаются в "/* */"

/*
форматирование вывода в БД (длины строки в символах и длины страницы в строках) выполняется командами
	set linesize длина_строки;
	set pagesize количество_строк;
*/

/*
Изменение формата времени системы
От имени system или sys
*/
	CREATE OR REPLACE
		TRIGGER on_login_trigger
	AFTER
		LOGON ON DATABASE
	BEGIN
		EXECUTE IMMEDIATE 'ALTER SESSION SET NLS_DATE_FORMAT = ''DD.MM.YYYY HH24:MI:SS''';
	END on_login_trigger;

-- для работы необходимо создать пользователя. это делается от имени администратора БД (system или sys);


CREATE USER rfid IDENTIFIED BY 19230
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA UNLIMITED ON users;

GRANT CONNECT TO rfid;
GRANT ALL PRIVILEGES TO rfid;

DISC;


CONN rfid/19230;


		--Cоздание таблиц
_________________________________________________________________________

CREATE TABLE closets
(
	c_id       VARCHAR(10),
	c_cell   NUMBER(2)    NOT NULL,
	c_bld       NUMBER(2)    NOT NULL,	
	c_floor    NUMBER(2)    NOT NULL,
	c_desc     VARCHAR(500) NOT NULL,
	CONSTRAINT pk_closets PRIMARY KEY (c_id)
	CONSTRAINT fk_closets_buildings FOREIGN KEY (c_bld) REFERENCES buildings (bld_id)
)

-- Справочная таблица для closets

CREATE TABLE buildings
(
	bld_id    NUMBER(2),
            bld_section VARCHAR(40) NOT NULL,
bld_name     VARCHAR(80) NOT NULL,
CONSTRAINT pk_buildings PRIMARY KEY  (bld_id)
);


CREATE TABLE mvalues
(
	mv_id     VARCHAR(14),
	mv_closet VARCHAR(10)  NOT NULL,
	mv_desc   VARCHAR(500) NOT NULL,
	CONSTRAINT pk_mvalues         PRIMARY KEY (mv_id),
	CONSTRAINT fk_mvalues_closets FOREIGN KEY (mv_closet) REFERENCES closets (c_id)
);

CREATE TABLE users
(
	u_id		VARCHAR(14),
	u_f 		VARCHAR(60) NOT NULL,
	u_io     	VARCHAR(60) NOT NULL,
	u_post 	VARCHAR(60) NOT NULL,
	u_code	VARCHAR(20) NOT NULL,
	CONSTRAINT pk_users PRIMARY KEY (u_id)
CONSTRAINT fk_users_departments FOREIGN KEY (u_code) REFERENCES departments (d_code)
);

-- Справочная таблица департаментов для таблицы users

CREATE TABLE departments
(
	d_code	VARCHAR(20)
	d_name	VARCHAR(300) NOT NULL,
	CONSTRAINT pk_code PRIMARY KEY (d_code)
);


CREATE TABLE tvalues
(
	tv_user  VARCHAR(14) NOT NULL,
	tv_value VARCHAR(14) NOT NULL,
	tv_take  DATE        NOT NULL,
	tv_ret   DATE,
	CONSTRAINT fk_tvalues_users   FOREIGN KEY (tv_user)  REFERENCES users   (u_id),
	CONSTRAINT fk_tvalues_mvalues FOREIGN KEY (tv_value) REFERENCES mvalues (mv_id)
);

		--Cоздание индексов
_________________________________________________________________________


CREATE INDEX i_mvcloset ON mvalues (mv_closet)
TABLESPACE users;

CREATE INDEX i_tvuser ON tvalues (tv_user)
TABLESPACE users;

CREATE INDEX i_tvvalue ON tvalues (tv_value)
TABLESPACE users;

		--Cоздание представлений
_________________________________________________________________________

CREATE OR REPLACE VIEW
	tvview
AS SELECT
	u.u_id as tvv_uid, u.u_f as tvv_uf, u.u_io as tvv_uio, u.u_post as tvv_upost,
	mv.mv_id as tvv_mvid, mv.mv_desc as tvv_mvdesc, mv.mv_closet as tvv_mvcloset,
	tv.tv_take as tvv_take, tv.tv_ret as tvv_ret
FROM
	users u,
	mvalues mv,
	tvalues tv
WHERE
	u.u_id = tv.tv_user
	AND
	mv.mv_id = tv.tv_value
ORDER BY
	tv.tv_take DESC;

DISC;


		--Cоздание архивных таблиц
_________________________________________________________________________

CREATE TABLE a_closets
(
	a_id       VARCHAR(10),
	a_bld      VARCHAR(80)  NOT NULL,
	a_subbld   VARCHAR(40)  NOT NULL,
	a_floor    NUMBER(2)    NOT NULL,
	a_desc     VARCHAR(500) NOT NULL,
	CONSTRAINT pk_closets PRIMARY KEY (a_id)
);
____________________________________
CREATE TABLE a_mvalues
(
	av_id      VARCHAR(14),           -- id ценности
	av_closet  VARCHAR(10)            -- шкаф, в котором она хранится
	av_desc    VARCHAR(500) NOT NULL, -- описание ценности
      --av_type    VARCHAR(40)  NOT NULL, -- тип ценности

	CONSTRAINT pk_a_values PRIMARY KEY (mv_id), -- определение первичного ключа
	CONSTRAINT fk_a_values_closets FOREIGN KEY (av_closet) REFERENCES closets (c_id) -- определение внешнего ключа к справочной табл.
      --CONSTRAINT fk_a_values_types FOREIGN KEY (av_type)   REFERENCES type_values (vt_name) -- определение внешнего ключа к справочной табл.
);
___________________________________
CREATE TABLE a_users
(
	au_id   VARCHAR(14),          -- id пользователя
	au_f    VARCHAR(60) NOT NULL, -- фамилия
	au_io   VARCHAR(60) NOT NULL, -- имя отчество
	au_post VARCHAR(60) NOT NULL, -- должность

	CONSTRAINT pk_a_users PRIMARY KEY (au_id) -- определение первичного ключа
);
____________________________________
CREATE TABLE a_taken_values
(
	atv_user   VARCHAR(14) NOT NULL, -- id пользователя
	atv_value  VARCHAR(14) NOT NULL, -- id ценности
	atv_take   DATE        NOT NULL, -- время взятия
	atv_return DATE,                 -- время возврата

	CONSTRAINT fk_a_values FOREIGN KEY (atv_value) REFERENCES a_values (av_id), -- определение внешнего ключа
	CONSTRAINT fk_a_users FOREIGN_KEY (atv_user)  REFERENCES users (au_id) -- определение внешнего ключа
);


		--Тригеры на DELETE
_____________________________________
--Триггер, заносящий данные в архивные талицы
CREATE OR REPLACE
	TRIGGER trigger_on_delete_tvalues
AFTER DELETE ON
	tvalues
	FOR EACH ROW
BEGIN
	INSERT INTO a_taken_values 
	VALUES 
	(:old.tv_user,
	 :old.tv_value,
	 :old.tv_take,
	 :old.tv_ret);
END;
_____________________________________
--Триггер, заносящий данные в архивные талицы
CREATE OR REPLACE
	TRIGGER trigger_on_delete_users
AFTER DELETE ON
	users
	FOR EACH ROW
BEGIN
	INSERT INTO a_users 
	VALUES 
	(:old.u_id,
	 :old.u_f,
	 :old.u_io,
	 :old.u_post);
END;
_____________________________________
--Триггер, заносящий данные в архивные талицы
CREATE OR REPLACE
	TRIGGER trigger_on_delete_mvalues
AFTER DELETE ON
	mvalues
	FOR EACH ROW
BEGIN
	INSERT INTO a_mvalues 
	VALUES 
	(:old.mv_id,
	:old.mv_closet,
	:old.mv_desc);
END;

_____________________________________
--Триггер, заносящий данные в архивные талицы
CREATE OR REPLACE
	TRIGGER trigger_on_delete_closets
AFTER DELETE ON
	closets
	FOR EACH ROW
BEGIN
	INSERT INTO a_closets
	VALUES 
	(:old.c_id,
	:old.c_bld,
	:old.c_subbld,
	:old.c_floor,
	:old.c_desc);
END;
